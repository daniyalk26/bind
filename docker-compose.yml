
services:
#─────────────────────────  DATABASE  ─────────────────────────
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bindiq_db
    ports: ["5432:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bindiq_db"]
      interval: 5s
      timeout: 5s
      retries: 5

#─────────────────────────  BACKEND  ──────────────────────────
  backend:
    build: ./backend
    command: >
      python -m uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      # put your keys in backend/.env; only PYTHONPATH lives here
      - PYTHONPATH=/app:/app/backend
      - DATABASE_URL=postgresql+asyncpg://user:password@postgres:5432/bindiq_db
    env_file:
      - ./backend/.env
    volumes:
      # mount *only* the package, not the whole root
      - ./backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8000:8000"]

#─────────────────────────  FRONTEND  ─────────────────────────
  frontend:
    build: ./frontend
    # Don't try to remove node_modules, just install and run
    command: >
      sh -c "npm install --force && 
             npm run dev -- --host 0.0.0.0 --port 5173"
    environment:
      # Turn off native bindings
      - ROLLUP_NO_NATIVE=1
      - VITE_NO_NATIVE=1
      - VITE_API_URL=http://backend:8000
      - NODE_OPTIONS=--openssl-legacy-provider
    volumes:
      # Mount source directory
      - ./frontend:/app
      # Exclude node_modules from host
      - /app/node_modules
    ports: ["5173:5173"]
    depends_on: [backend]

volumes:
  postgres_data: